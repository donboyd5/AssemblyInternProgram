---
output: html_document
editor_options:
  chunk_output_type: console
---

# Introduction

```{r}
#| label: setup

rpd <- here::here("research_paper")
source(fs::path(rpd, "libraries.R"))
library(googledrive)
library(scales)

# drive_auth()
gs4_auth(token = drive_token())

# Make sure to check the box:
#   See, edit, create, and delete all of your Google Drive files

```


```{r}
#| label: constants

template <- fs::path(rpd, "template.Rmd")
grdir <- fs::path(rpd, "grade_reports")

```


```{r}
#| label: function-get-weights

get_weights <- function(research, writing){
  vnames <- c("research", "writing", "policy", "politics", "democracy") |> 
    paste0("_numeric")
  ppd <- 1 - research - writing
  nweights <- c(research, writing, rep(ppd / 3, 3))
  weights <- tibble(name=vnames, weight=nweights)
  weights
}

```


```{r}
#| label: function-pdf

gendoc <- function(row) {
  filename <- paste0(row$lname, "_", row$fname, "_Assembly_Intern_Program_2024_paper_grade.pdf")
  fpath <- fs::path(grdir, filename)
  rmarkdown::render(
    template,
    output_file = fpath, # Change to .docx for Word
    params = list(
      student = row$fnln,
      billnum = row$billnum,
      billdesc = row$billdesc,
      gradebase = row$gradebase,
      comments = row$comments,
      policy = row$policy,
      policy_numeric = row$policy_numeric,
      politics = row$politics,
      politics_numeric = row$politics_numeric,
      democracy = row$democracy,
      democracy_numeric = row$democracy_numeric,
      research = row$research,
      research_numeric = row$research_numeric,
      writing = row$writing,
      writing_numeric = row$writing_numeric,
      ppd_pct = wwide$ppd,
      research_pct = wwide$research_numeric,
      writing_pct = wwide$writing_numeric
      )
  )
}

```


```{r}
#| label: get-weights

weights <- get_weights(research=.2, writing=.1)
weights
sum(weights$weight)

wwide <- weights |> 
  pivot_wider(values_from = weight) |> 
  mutate(ppd=policy_numeric + politics_numeric + democracy_numeric)

```


```{r}
#| label: get-data

# grading data ----
url <- "https://docs.google.com/spreadsheets/d/1K_xIaxnXMwdkRhHSWL2rBSnhaWRRDKNMGypEdbvFO0I"
# as_sheets_id(url)

df1 <- read_sheet(url, sheet = "Cycle1_ResearchPaper")
df1

df2 <- df1 |> 
  filter(lname != "Last Name") |> 
  rename_with(\(x) str_replace(x, "(?<=_numeric).*", "")) |> 
  unnest_wider(col=received, names_sep = "_") |> # creates received_1 dttm
  mutate(received=as.Date(received_1))
df2

# calculate gradebase
grades <- df2 |> 
  select(lname, fname, contains("_numeric")) |>
  pivot_longer(cols=-c(lname, fname)) |>
  left_join(weights |> select(name, weight),
            by = join_by(name)) |> 
  summarise(gradebase=sum(value * weight) * 10, .by=c(lname, fname))

df3 <- df2 |> 
  select(-received_1) |> 
  left_join(grades,
            by = join_by(lname, fname)) |>
  relocate(gradebase, .after=latepen)

# btools::ns(df3)

```

## Create pdf documents

```{r}
#| label: run-pdf-creation

# gendoc(df3[1, ])  # me
i <- 8
gendoc(df3[i, ])

walk(2:8, \(i) gendoc(df3[i, ]))

```


## Grade analysis

```{r}
#| label: examine-grades

grades |> 
  arrange(desc(gradebase))

grades |> 
  summarise(n=n(), nna=sum(!is.na(gradebase)), x=quantile(gradebase, na.rm=TRUE) |> list())|> 
  unnest_wider(col=x)

```

