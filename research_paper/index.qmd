---
output: html_document
editor_options:
  chunk_output_type: console
---

# Introduction

```{r}
#| label: setup

rpd <- here::here("research_paper")
source(fs::path(rpd, "libraries.R"))
library(googledrive)
library(scales)
library(openxlsx)

# drive_auth()
gs4_auth(token = drive_token())

# Make sure to check the box:
#   See, edit, create, and delete all of your Google Drive files

```


```{r}
#| label: constants

template <- fs::path(rpd, "template.Rmd")
grdir <- fs::path(rpd, "grade_reports")

```


```{r}
#| label: function-get-weights

get_weights <- function(research, writing){
  vnames <- c("research", "writing", "policy", "politics", "democracy") |> 
    paste0("_points")
  ppd <- 1 - research - writing
  nweights <- c(research, writing, rep(ppd / 3, 3))
  weights <- tibble(name=vnames, weight=nweights)
  weights
}

```


```{r}
#| label: function-pdf

gendoc <- function(row) {
  if(!is.na(row$comments) & row$comments=="TBD"){
    msg <- paste0("Grade for ", row$fnln, " is TBD.")
    return(msg)
  }
  filename <- paste0(row$lname, "_", row$fname, "_Assembly_Intern_Program_2024_paper_grade.pdf")
  fpath <- fs::path(grdir, filename)
  rmarkdown::render(
    template,
    output_file = fpath, # Change to .docx for Word
    params = list(
      student = row$fnln,
      billnum = row$billnum,
      billdesc = row$billdesc,
      finalgrade = row$finalgrade,
      comments = row$comments,
      policy = row$policy,
      policy_points = row$policy_points,
      politics = row$politics,
      politics_points = row$politics_points,
      democracy = row$democracy,
      democracy_points = row$democracy_points,
      research = row$research,
      research_points = row$research_points,
      writing = row$writing,
      writing_points = row$writing_points,
      ppd_pct = wwide$ppd,
      research_pct = wwide$research_points,
      writing_pct = wwide$writing_points
      )
  )
}

```


```{r}
#| label: get-weights

weights <- get_weights(research=.2, writing=.1)
weights
sum(weights$weight)

wwide <- weights |> 
  pivot_wider(values_from = weight) |> 
  mutate(ppd=policy_points + politics_points + democracy_points)

```


```{r}
#| label: get-data

# grading data ----
url <- "https://docs.google.com/spreadsheets/d/1K_xIaxnXMwdkRhHSWL2rBSnhaWRRDKNMGypEdbvFO0I"
# as_sheets_id(url)

df1 <- read_sheet(url, sheet = "Cycle1_ResearchPaper")
df1

df2 <- df1 |> 
  filter(lname != "Last Name") |> 
  # remove trailing stuff in column names that have "_points"
  rename_with(\(x) str_replace(x, "(?<=_points).*", "")) |>
  # clean date received
  unnest_wider(col=received, names_sep = "_") |> # creates received_1 dttm
  mutate(across(where(is.character), str_trim)) |> 
  mutate(received=as.Date(received_1),
         dayslate=pmax(received - as.Date("2024-04-16"), 0) |> round() |> as.integer())
df2

# calculate weighted grade and floored grade (gradebase)
wtdgrades <- df2 |> 
  select(lname, fname, contains("_points")) |>
  pivot_longer(cols=-c(lname, fname)) |>
  left_join(weights |> select(name, weight),
            by = join_by(name)) |> 
  summarise(wtdgrade=sum(value * weight) * 10, .by=c(lname, fname))
wtdgrades

gorder <- c("A+", "A", "A-",
            "B+", "B", "B-",
            "C+", "C", "C-",
            "D", "ERROR")

df3 <- df2 |> 
  select(-received_1) |> 
  left_join(wtdgrades |> 
              select(lname, fname, wtdgrade),
            by = join_by(lname, fname)) |> 
  mutate(gradebase=pmax(round(wtdgrade), 65),
         penalty=dayslate * 3,
         finalgrade=gradebase - penalty,
         finalgrade=pmax(finalgrade, 65),
         finalgrade=ifelse(!is.na(comments) & comments=="TBD", NA_real_, finalgrade),
         ltrgrade=case_when(
           finalgrade <= 59 ~ "F",
           finalgrade %in% 60:69 ~ "D",
           finalgrade %in% 70:72 ~ "C-",
           finalgrade %in% 73:76 ~ "C",
           finalgrade %in% 77:79 ~ "C+",
           finalgrade %in% 80:82 ~ "B-",
           finalgrade %in% 83:86 ~ "B",
           finalgrade %in% 87:89 ~ "B+",
           finalgrade %in% 90:92 ~ "A-",
           finalgrade %in% 93:96 ~ "A",
           finalgrade %in% 97:100 ~ "A+",
           .default = "ERROR"),
         ltrgrade=factor(ltrgrade, levels=gorder)) |> 
  relocate(dayslate, ltrgrade, finalgrade, penalty, gradebase, .after=latepen)

# btools::ns(df3)

```

## Create pdf documents

```{r}
#| label: run-pdf-creation

# gendoc(df3[1, ])  # me
i <- 29
# row <- df3[i, ]
# gendoc(df3[i, ])

idx <- which(!is.na(df3$gradebase))
walk(idx, \(i) gendoc(df3[i, ]))


```


## Grade analysis

```{r}
#| label: examine-grades

grades <- df3 |> 
  select(lname, fname, dayslate, ltrgrade, finalgrade, penalty, gradebase, wtdgrade, contains("_points"))

grades |> 
  arrange(desc(wtdgrade))

grades |> 
  arrange(lname, fname)

# write to file
grades |> 
  arrange(lname, fname) |> 
  filter(!is.na(finalgrade)) |> 
  select(lname, fname, finalgrade) |> 
  write.xlsx(here::here("research_paper", "Boyd_research_paper_grades_2024_Assembly_intern_program.xlsx"))


grades |> 
  summarise(n=n(), nna=sum(!is.na(wtdgrade)), x=quantile(wtdgrade, na.rm=TRUE) |> list())|> 
  unnest_wider(col=x)

count(grades, ltrgrade)

# tmp <- df3 |> filter(str_detect(lname, "Eboig"))

```

